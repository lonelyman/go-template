package example_module

import (
	"errors"

	"gorm.io/gorm"
)

type ExampleModel struct {
	gorm.Model
	Name   string `gorm:"not null"`
	Email  string `gorm:"unique;not null"`
	Status string `gorm:"default:active"`
}

// TableName specifies the table name for GORM
func (ExampleModel) TableName() string {
	return "examples"
}

// ExampleRepository interface defines the contract for data access
type ExampleRepository interface {
	Create(example *ExampleDomain) error
	// GetByID(id uint) (*ExampleModel, error)
	GetByEmail(email string) (*ExampleDomain, error)
	// Update(example *ExampleModel) error
	// Delete(id uint) error
	// GetAll(limit, offset int) ([]ExampleModel, error)
}

// exampleRepository implements ExampleRepository
type exampleRepository struct {
	db *gorm.DB
}

// NewExampleRepository creates a new instance of ExampleRepository
func NewExampleRepository(db *gorm.DB) ExampleRepository {
	return &exampleRepository{db: db}
}

// Create creates a new example
func (r *exampleRepository) Create(domain *ExampleDomain) error {
	gormModel := toGORM(domain) // üëà ‡πÉ‡∏ä‡πâ toGORM ‡∏â‡∏ö‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏™‡∏±‡πâ‡∏ô‡∏•‡∏á

	result := r.db.Create(gormModel) // GORM ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ DB
	if result.Error != nil {
		return result.Error
	}
	// ‚≠êÔ∏è ‡∏û‡∏≠‡∏ñ‡∏∂‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ GORM ‡∏à‡∏∞‡πÄ‡∏≠‡∏≤ ID ‡∏ó‡∏µ‡πà DB ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô gormModel.ID ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

	// ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡πÅ‡∏Ñ‡πà‡πÄ‡∏≠‡∏≤ ID ‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà Domain ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
	domain.ID = gormModel.ID
	domain.CreatedAt = gormModel.CreatedAt
	domain.UpdatedAt = gormModel.UpdatedAt

	return nil
}

// GetByEmail retrieves an example by email
func (r *exampleRepository) GetByEmail(email string) (*ExampleDomain, error) {
	var gormModel ExampleModel
	err := r.db.Where("email = ?", email).First(&gormModel).Error
	if errors.Is(err, gorm.ErrRecordNotFound) {
		return nil, nil
	}
	domain := gormModel.toDomain()
	return domain, err
}

/*
// GetByID retrieves an example by ID
func (r *exampleRepository) GetByID(id uint) (*ExampleDomain, error) {
	var example ExampleDomain
	err := r.db.First(&example, id).Error
	if errors.Is(err, gorm.ErrRecordNotFound) {
		return nil, errors.New("example not found")
	}
	return &example, err
}



// Update updates an existing example
func (r *exampleRepository) Update(example *ExampleDomain) error {
	return r.db.Save(example).Error
}

// Delete deletes an example by ID
func (r *exampleRepository) Delete(id uint) error {
	return r.db.Delete(&ExampleDomain{}, id).Error
}

// GetAll retrieves all examples with pagination
func (r *exampleRepository) GetAll(limit, offset int) ([]ExampleDomain, error) {
	var examples []ExampleDomain
	err := r.db.Limit(limit).Offset(offset).Find(&examples).Error
	return examples, err
}
*/

// ====================================================================================
// Private Helper Functions (‡∏ô‡∏±‡∏Å‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤)
// ====================================================================================

// ‚≠êÔ∏è toGORM: ‡∏Ñ‡∏∑‡∏≠ "‡∏ô‡∏±‡∏Å‡πÅ‡∏õ‡∏•" ‡∏Ç‡∏≤‡πÑ‡∏õ (Domain -> GORM) ‚≠êÔ∏è
// ‡∏£‡∏±‡∏ö Domain object ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô GORM model ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö DB
func toGORM(domain *ExampleDomain) *ExampleModel {
	return &ExampleModel{
		Name:   domain.Name,
		Email:  domain.Email,
		Status: domain.Status,
	}
}

// ‚≠êÔ∏è toDomain: ‡∏Ñ‡∏∑‡∏≠ "‡∏ô‡∏±‡∏Å‡πÅ‡∏õ‡∏•" ‡∏Ç‡∏≤‡∏Å‡∏•‡∏±‡∏ö (GORM -> Domain) ‚≠êÔ∏è
// ‡πÄ‡∏õ‡πá‡∏ô method ‡∏Ç‡∏≠‡∏á GORM model ‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô Domain object ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå
// ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ Service ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠
func (g *ExampleModel) toDomain() *ExampleDomain {
	return &ExampleDomain{
		ID:        g.ID,
		Name:      g.Name,
		Email:     g.Email,
		Status:    g.Status,
		CreatedAt: g.CreatedAt,
		UpdatedAt: g.UpdatedAt,
	}
}
